# MySQL. Есть огромная таблица заказов и таблица с одной ячейкой, в которой указана дата.
# Нужно посчитать сумму оплат по заказам, которые были позже даты, указанной во второй таблице.
# Предложить и обосновать максимально эффективное решение

# Таблица с заказами - `orders` (поля - `id`, `amount`, `date`)
# Таблица с датой - `dates` (поле - `date`)
#
# Для повышения скорости работы следует создать индекс на поле `date` таблицы `orders`
# В данном случае эффективнее будет работать подзапрос, а не JOIN, т.к. подзапрос некоррелированный,
# соответственно будет выполнен только 1 раз.

SELECT sum(orders.amount) AS orders_amount
FROM orders
WHERE orders.date >
      (SELECT dates.date
       FROM dates
       LIMIT 1);

# Также, возможный вариант решения данной задачи - партицирование. То есть выделить нужные нам данные (с датой больше
# указанной) в отдельную секцию. Таким образом, блоки с датами, не входящими в условие, даже не будут начинать
# читаться движком с диска.

ALTER TABLE orders
    PARTITION BY RANGE (TO_DAYS(`date`)) (
        PARTITION `p0` VALUES LESS THAN (TO_DAYS('2021-01-01 00:00:00')),
        PARTITION `p1` VALUES LESS THAN MAXVALUE
        );
